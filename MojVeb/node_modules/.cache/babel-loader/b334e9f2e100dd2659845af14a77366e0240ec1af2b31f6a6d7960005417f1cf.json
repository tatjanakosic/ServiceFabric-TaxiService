{"ast":null,"code":"import axios from 'axios';\nconst ProfileService = {\n  getProfile: async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.get(`${process.env.REACT_APP_COMM}/profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching profile data:', error);\n      throw error;\n    }\n  },\n  updateProfile: async profileData => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      await axios.put(`${process.env.REACT_APP_COMM}/profile`, profileData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Error updating profile data:', error);\n      throw error;\n    }\n  }\n};\nexport default ProfileService;","map":{"version":3,"names":["axios","ProfileService","getProfile","token","localStorage","getItem","Error","response","get","process","env","REACT_APP_COMM","headers","Authorization","data","error","console","updateProfile","profileData","put"],"sources":["C:/Users/nikol/Desktop/MojVeb/src/Services/ProfileService.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ProfileService = {\n  getProfile: async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.get(`${process.env.REACT_APP_COMM}/profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching profile data:', error);\n      throw error;\n    }\n  },\n\n  updateProfile: async (profileData) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      await axios.put(`${process.env.REACT_APP_COMM}/profile`, profileData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n    } catch (error) {\n      console.error('Error updating profile data:', error);\n      throw error;\n    }\n  },\n};\n\nexport default ProfileService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG;EACrBC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,cAAe,UAAS,EAAE;QACxEC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASV,KAAM;QACjC;MACF,CAAC,CAAC;MACF,OAAOI,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpC,IAAI;MACF,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACA,MAAMN,KAAK,CAACmB,GAAG,CAAE,GAAEV,OAAO,CAACC,GAAG,CAACC,cAAe,UAAS,EAAEO,WAAW,EAAE;QACpEN,OAAO,EAAE;UACPC,aAAa,EAAG,UAASV,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAed,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}