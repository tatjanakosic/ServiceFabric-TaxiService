{"ast":null,"code":"import axios from 'axios';\nconst VerificationService = {\n  getUsersForVerification: async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      console.log('Token:', token); // Log token\n      const response = await axios.put(`${process.env.REACT_APP_VRFY}/verificationList`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching users for verification:', error);\n      throw error;\n    }\n  },\n  verifyUser: async userId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.post(`${process.env.REACT_APP_VRFY}/verifyUser/${userId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error verifying user:', error);\n      throw error;\n    }\n  },\n  denyUser: async userId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.post(`${process.env.REACT_APP_VRFY}/denyUser/${userId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error denying user:', error);\n      throw error;\n    }\n  }\n};\nexport default VerificationService;","map":{"version":3,"names":["axios","VerificationService","getUsersForVerification","token","localStorage","getItem","Error","console","log","response","put","process","env","REACT_APP_VRFY","headers","Authorization","data","error","verifyUser","userId","post","denyUser"],"sources":["C:/Users/nikol/Desktop/MojVeb/src/Services/VerificationService.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst VerificationService = {\n  getUsersForVerification: async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      console.log('Token:', token); // Log token\n      const response = await axios.put(`${process.env.REACT_APP_VRFY}/verificationList`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching users for verification:', error);\n      throw error;\n    }\n  },\n\n  verifyUser: async (userId) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.post(`${process.env.REACT_APP_VRFY}/verifyUser/${userId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error verifying user:', error);\n      throw error;\n    }\n  },\n\n  denyUser: async (userId) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      const response = await axios.post(`${process.env.REACT_APP_VRFY}/denyUser/${userId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error denying user:', error);\n      throw error;\n    }\n  },\n};\n\nexport default VerificationService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,mBAAmB,GAAG;EAC1BC,uBAAuB,EAAE,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,KAAK,CAAC,CAAC,CAAC;MAC9B,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,cAAe,mBAAkB,EAAE,CAAC,CAAC,EAAE;QACrFC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASZ,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOM,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAEDC,UAAU,EAAE,MAAOC,MAAM,IAAK;IAC5B,IAAI;MACF,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACA,MAAMG,QAAQ,GAAG,MAAMT,KAAK,CAACoB,IAAI,CAAE,GAAET,OAAO,CAACC,GAAG,CAACC,cAAe,eAAcM,MAAO,EAAC,EAAE,CAAC,CAAC,EAAE;QAC1FL,OAAO,EAAE;UACPC,aAAa,EAAG,UAASZ,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOM,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDI,QAAQ,EAAE,MAAOF,MAAM,IAAK;IAC1B,IAAI;MACF,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACA,MAAMG,QAAQ,GAAG,MAAMT,KAAK,CAACoB,IAAI,CAAE,GAAET,OAAO,CAACC,GAAG,CAACC,cAAe,aAAYM,MAAO,EAAC,EAAE,CAAC,CAAC,EAAE;QACxFL,OAAO,EAAE;UACPC,aAAa,EAAG,UAASZ,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOM,QAAQ,CAACO,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAehB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}